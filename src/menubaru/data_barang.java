/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package menubaru;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;
/**
 *
 * @author ALKHOIR
 */
public class data_barang extends javax.swing.JPanel {
    final private Connection conn = new koneksi().connect();
    private DefaultTableModel tabmode;
    final private JTextField pathFoto;
    /**
     * Creates new form data_barang
     */
    public data_barang() {
        initComponents();
        dataTable();
        
        pathFoto = new JTextField();
        pathFoto.setVisible(false);
        add(pathFoto);
        
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/logof.png"));
        JLabel label = new JLabel(icon);
        this.add(label);
    }
    
    protected void kosong(){
        idBarang.setText("");
        namaBarang.setText("");
        hargaBarang.setText("");
        kondisi.setText("");
        spesifikasi.setText("");
        foto.setIcon(null);
    }
    
    protected void dataTable(){
        Object[] baris = {"id_barang", "nama_barang", "harga_barang", "kondisi", "spesifikasi", "gambar"};
        tabmode = new DefaultTableModel(null, baris);
        tableBarangPermintaan.setModel(tabmode);
        
        String sql = "SELECT * FROM databarang";
        
        try{
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while(hasil.next()){
                String a = hasil.getString("id_barang");
                String b = hasil.getString("nama_barang");
                String c = hasil.getString("harga_barang");
                String d = hasil.getString("kondisi");
                String e = hasil.getString("spesifikasi");
                String f = hasil.getString("gambar");
                
                String[] data = {a, b, c, d, e, f};
                tabmode.addRow(data);
            }
        }catch (Exception e){
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bKembali = new javax.swing.JButton();
        hargaBarang = new javax.swing.JTextField();
        cari = new javax.swing.JTextField();
        bCari = new javax.swing.JButton();
        bTambah = new javax.swing.JButton();
        bEdit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        bHapus = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        bKeluar = new javax.swing.JButton();
        idBarang = new javax.swing.JTextField();
        namaBarang = new javax.swing.JTextField();
        kondisi = new javax.swing.JTextField();
        foto = new javax.swing.JLabel();
        bUnggah = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        spesifikasi = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableBarangPermintaan = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        bKembali.setBackground(new java.awt.Color(41, 76, 55));
        bKembali.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bKembali.setForeground(new java.awt.Color(255, 255, 255));
        bKembali.setText("Back");
        bKembali.setPreferredSize(new java.awt.Dimension(74, 23));
        bKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bKembaliActionPerformed(evt);
            }
        });

        hargaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaBarangActionPerformed(evt);
            }
        });

        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });

        bCari.setBackground(new java.awt.Color(41, 76, 55));
        bCari.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bCari.setForeground(new java.awt.Color(255, 255, 255));
        bCari.setText("Search");
        bCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCariActionPerformed(evt);
            }
        });

        bTambah.setBackground(new java.awt.Color(41, 76, 55));
        bTambah.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bTambah.setForeground(new java.awt.Color(255, 255, 255));
        bTambah.setText("Add");
        bTambah.setPreferredSize(new java.awt.Dimension(74, 23));
        bTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTambahActionPerformed(evt);
            }
        });

        bEdit.setBackground(new java.awt.Color(41, 76, 55));
        bEdit.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bEdit.setForeground(new java.awt.Color(255, 255, 255));
        bEdit.setText("Edit");
        bEdit.setPreferredSize(new java.awt.Dimension(74, 23));
        bEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditActionPerformed(evt);
            }
        });

        jLabel3.setText("ID Barang");

        jLabel4.setText("Nama Barang");

        jLabel5.setText("Spesifikasi");

        jLabel7.setText("Harga Barang");

        bHapus.setBackground(new java.awt.Color(41, 76, 55));
        bHapus.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bHapus.setForeground(new java.awt.Color(255, 255, 255));
        bHapus.setText("Delete");
        bHapus.setPreferredSize(new java.awt.Dimension(74, 23));
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        jLabel8.setText("Kondisi");

        bKeluar.setBackground(new java.awt.Color(41, 76, 55));
        bKeluar.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bKeluar.setForeground(new java.awt.Color(255, 255, 255));
        bKeluar.setText("Exit");
        bKeluar.setPreferredSize(new java.awt.Dimension(74, 23));
        bKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bKeluarActionPerformed(evt);
            }
        });

        idBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idBarangActionPerformed(evt);
            }
        });

        namaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaBarangActionPerformed(evt);
            }
        });

        kondisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kondisiActionPerformed(evt);
            }
        });

        foto.setBackground(new java.awt.Color(255, 0, 248));
        foto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bUnggah.setBackground(new java.awt.Color(41, 76, 55));
        bUnggah.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bUnggah.setForeground(new java.awt.Color(255, 255, 255));
        bUnggah.setText("Upload");
        bUnggah.setPreferredSize(new java.awt.Dimension(75, 22));
        bUnggah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUnggahActionPerformed(evt);
            }
        });

        spesifikasi.setColumns(20);
        spesifikasi.setRows(5);
        spesifikasi.setPreferredSize(new java.awt.Dimension(210, 84));
        jScrollPane1.setViewportView(spesifikasi);

        tableBarangPermintaan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Barang ", "Nama Barang", "Harga Barang", "Kondisi", "Spesifikasi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableBarangPermintaan.setShowGrid(true);
        tableBarangPermintaan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBarangPermintaanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableBarangPermintaan);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Master > Item Data");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(209, 209, 209)
                                .addComponent(bTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bHapus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(idBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(42, 42, 42)
                                        .addComponent(hargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(kondisi, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(foto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bUnggah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 556, Short.MAX_VALUE)
                                .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bCari))
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel3)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(hargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(kondisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(foto, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bUnggah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCari))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bTambah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bHapus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void hargaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaBarangActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cariActionPerformed

    private void bCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCariActionPerformed
        Object[] baris = {"id_barang", "nama_barang", "harga_barang", "kondisi", "spesifikasi", "gambar"};
        tabmode = new DefaultTableModel(null, baris);
        tableBarangPermintaan.setModel(tabmode);

        String keyword = cari.getText();
        
        String sql = "SELECT * FROM databarang WHERE " +
                     "id_barang LIKE ? OR " +
                     "nama_barang LIKE ? OR " +
                     "harga_barang LIKE ? OR " +
                     "kondisi LIKE ? OR " +
                     "spesifikasi LIKE ? OR " +
                     "gambar LIKE ?";

        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            for (int i = 1; i <= 6; i++) {
                ps.setString(i, "%" + keyword + "%");
            }

            ResultSet hasil = ps.executeQuery();
            
            while (hasil.next()) {
                String a = hasil.getString("id_barang");
                String b = hasil.getString("nama_barang");
                String c = hasil.getString("harga_barang");
                String d = hasil.getString("kondisi");
                String e = hasil.getString("spesifikasi");
                String f = hasil.getString("gambar");
                
                String[] data = {a, b, c, d, e, f};
                tabmode.addRow(data);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal Mencari Data Barang!\n" + e.getMessage());
        }
    }//GEN-LAST:event_bCariActionPerformed

    private void bTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTambahActionPerformed
        Object[] baris = {"id_barang", "nama_barang", "harga_barang", "kondisi", "spesifikasi", "gambar"};
        tabmode = new DefaultTableModel(null, baris);
        tableBarangPermintaan.setModel(tabmode);
        
        String sql = "INSERT INTO databarang (id_barang, nama_barang, harga_barang, kondisi, spesifikasi, gambar) VALUES (?, ?, ?, ?, ?, ?)";
    
        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, idBarang.getText());
            ps.setString(2, namaBarang.getText());
            ps.setString(3, hargaBarang.getText());
            ps.setString(4, kondisi.getText());
            ps.setString(5, spesifikasi.getText());
            String sourcePath = pathFoto.getText();
            File sourceFile = new File(sourcePath);

            if (!sourceFile.exists()) {
                JOptionPane.showMessageDialog(null, "File gambar tidak ditemukan!");
                return;
            }

            String ext = sourcePath.substring(sourcePath.lastIndexOf("."));
            String id = idBarang.getText();

            String destDir = System.getProperty("user.dir") + File.separator + "src" + File.separator + "imagesBarang" + File.separator;
            File destFile = new File(destDir + id + ext);

            try {
                Files.copy(sourceFile.toPath(), destFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
            } catch (IOException ioex) {
                JOptionPane.showMessageDialog(null, "Gagal menyalin file gambar: " + ioex.getMessage());
                return;
            }

            ps.setString(6, id + ext);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data Barang Berhasil Disimpan");

            kosong();
            dataTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal Menyimpan Data Barang: " + e.getMessage());
        }
    }//GEN-LAST:event_bTambahActionPerformed

    private void bEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditActionPerformed
        try {
            String id = idBarang.getText();
            String sourcePath = pathFoto.getText();

            String destDir = System.getProperty("user.dir") + File.separator + "src" + File.separator + "imagesBarang" + File.separator;
            String newFileName = null;

            String oldFileName = null;
            String queryOld = "SELECT gambar FROM databarang WHERE id_barang= ?";
            PreparedStatement psOld = conn.prepareStatement(queryOld);
            psOld.setString(1, id);
            ResultSet rsOld = psOld.executeQuery();
            if (rsOld.next()) {
                oldFileName = rsOld.getString("gambar");
            }

            if (!sourcePath.isEmpty()) {
                File sourceFile = new File(sourcePath);
                if (!sourceFile.exists()) {
                    JOptionPane.showMessageDialog(null, "File gambar tidak ditemukan!");
                    return;
                }

                String ext = sourcePath.substring(sourcePath.lastIndexOf("."));
                newFileName = id + ext;

                if (!newFileName.equals(oldFileName)) {
                    File oldFile = new File(destDir + oldFileName);
                    if (oldFile.exists()) {
                        oldFile.delete();
                    }

                    File destFile = new File(destDir + newFileName);
                    try {
                        Files.copy(sourceFile.toPath(), destFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                    } catch (IOException ioex) {
                        JOptionPane.showMessageDialog(null, "Gagal menyalin file gambar: " + ioex.getMessage());
                        return;
                    }
                } else {
                    newFileName = oldFileName;
                }
            } else {
                newFileName = oldFileName;
            }

            String sql = "UPDATE dataBarang SET nama_barang=?, harga_barang=?, kondisi=?, spesifikasi=?, gambar=? WHERE id_barang=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, namaBarang.getText());
            ps.setString(2, hargaBarang.getText());
            ps.setString(3, kondisi.getText());
            ps.setString(4, spesifikasi.getText());
            ps.setString(5, newFileName);
            ps.setString(6, id);

            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data Barang Berhasil Diedit.");
            kosong();
            dataTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal Mengedit Data Barang!\n" + e.getMessage());
        }
    }//GEN-LAST:event_bEditActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
        try {
            String id = idBarang.getText();

            String fileName = null;
            String sqlSelect = "SELECT gambar FROM databarang WHERE id_barang=?";
            PreparedStatement psSelect = conn.prepareStatement(sqlSelect);
            psSelect.setString(1, id);
            ResultSet rs = psSelect.executeQuery();
            if (rs.next()) {
                fileName = rs.getString("gambar");
            }

            String sqlDelete = "DELETE FROM dataBarang WHERE id_barang=?";
            PreparedStatement pst = conn.prepareStatement(sqlDelete);
            pst.setString(1, id);
            pst.executeUpdate();

            if (fileName != null && !fileName.isEmpty()) {
                String imagePath = System.getProperty("user.dir") + File.separator + "src" + File.separator + "imagesBarang" + File.separator + fileName;
                File imageFile = new File(imagePath);
                if (imageFile.exists()) {
                    if (imageFile.delete()) {
                        System.out.println("Gambar berhasil dihapus: " + fileName);
                    } else {
                        System.err.println("Gagal menghapus gambar: " + fileName);
                    }
                }
            }

            JOptionPane.showMessageDialog(null, "Data Barang Berhasil Dihapus.");
            kosong();
            dataTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal Menghapus Data Barang!\n" + e.getMessage());
        }
    }//GEN-LAST:event_bHapusActionPerformed

    private void bKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bKeluarActionPerformed
        int konfirmasi = JOptionPane.showConfirmDialog (
            this,
            "Apakah Anda yakin ingin keluar?",
            "Konfirmasi Keluar",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );

        if (konfirmasi == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_bKeluarActionPerformed

    private void idBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idBarangActionPerformed

    private void namaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaBarangActionPerformed

    private void kondisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kondisiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kondisiActionPerformed

    private void bUnggahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUnggahActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String path = f.getAbsolutePath();
        pathFoto.setText(path);
        try {
            BufferedImage bi = ImageIO.read(new File(path));
            Image img = bi.getScaledInstance(109, 140, Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(img);
            foto.setIcon(icon);
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_bUnggahActionPerformed

    private void tableBarangPermintaanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBarangPermintaanMouseClicked
        int baris = tableBarangPermintaan.getSelectedRow();

        if (baris != -1) {
            idBarang.setText(tabmode.getValueAt(baris, 0).toString());
            namaBarang.setText(tabmode.getValueAt(baris, 1).toString());
            hargaBarang.setText(tabmode.getValueAt(baris, 2).toString());
            kondisi.setText(tabmode.getValueAt(baris, 3).toString());
            spesifikasi.setText(tabmode.getValueAt(baris, 4).toString());
            
            String fileName = tabmode.getValueAt(baris, 5).toString();
            String destDir = System.getProperty("user.dir") + File.separator + "src" + File.separator + "imagesBarang" + File.separator;
            String fullPath = destDir + fileName;
            
            pathFoto.setText(fullPath);

            try {
                BufferedImage bi = ImageIO.read(new File(fullPath));
                Image img = bi.getScaledInstance(109, 140, Image.SCALE_SMOOTH); 
                ImageIcon icon = new ImageIcon(img);
                foto.setIcon(icon);
            } catch (IOException e) {
                foto.setIcon(null);
                System.out.println("Gagal menampilkan gambar: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_tableBarangPermintaanMouseClicked

    private void bKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bKembaliActionPerformed
        this.dispose();
        new tampilanMenu.menuAdmin().setVisible(true);
    }//GEN-LAST:event_bKembaliActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCari;
    private javax.swing.JButton bEdit;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bKeluar;
    private javax.swing.JButton bKembali;
    private javax.swing.JButton bTambah;
    private javax.swing.JButton bUnggah;
    private javax.swing.JTextField cari;
    private javax.swing.JLabel foto;
    private javax.swing.JTextField hargaBarang;
    private javax.swing.JTextField idBarang;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField kondisi;
    private javax.swing.JTextField namaBarang;
    private javax.swing.JTextArea spesifikasi;
    private javax.swing.JTable tableBarangPermintaan;
    // End of variables declaration//GEN-END:variables


    private void dispose() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
